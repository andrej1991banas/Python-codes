#!/usr/bin/python

'''
Take a nested list and return a single flattened list with all values except nil/null.

The challenge is to take an arbitrarily-deep nested list-like structure and produce a flattened structure without any nil/null values.

For example:

input: [1,[2,3,null,4],[null],5]

output: [1,2,3,4,5]
'''

def flatten(iterable):
    completion = []#empty list to be filled up and created as flattened list from nested list
    for i in iterable:
        if isinstance(i,list):
            for y in flatten(i): #going through nested list in itterable
                completion.append(y)
        else:
            completion.append(i)
    completion = [item for item in completion if item not in ["null", "nil", None]]
    return completion
